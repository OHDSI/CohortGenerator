% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TemplateCohorts.R
\name{CohortTemplateDefinition}
\alias{CohortTemplateDefinition}
\title{Class for automating the creation of bulk cohorts}
\description{
Class for automating the creation of bulk cohorts

Class for automating the creation of bulk cohorts
}
\details{
This class provides a framework for automating the creation of bulk cohorts
by defining template SQL queries and associated callbacks to execute them.
This is useful when defining lots of exposure or outcomes for cohorts that are very general in nature.
For example, all rxNorm ingredient cohorts, all ATC ingredient cohorts or all SNOMED condition occurences with > x
diagnosis codes.

These cohorts can then be subsetted with common cohort subset operations such as limiting to specific age, gender,
or observation criteria, should this be excluded from the cohort definition. However, when applying operations in
bulk it may be more efficient to include such definitions within the template sql itself.

This approach is also useful for cohorts that can not based on ATLAS/CirceDefinitions alone.

CURRENTLY NOT SUPPORTED:
 * Saving definitions that use runtime arguments on a per cdm basis. This creates a challenge for running the same
   cohort across different databases. Furthermore, saving information within the CDM schema in a shared OHDSI study
   is not desirable.
}
\seealso{
Other templateCohorts: 
\code{\link{addCohortTemplateDefintion}()},
\code{\link{addSqlCohortDefinition}()},
\code{\link{getTemplateDefinitions}()}
}
\concept{templateCohorts}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{sqlArgs}}{optional arguments for sql}

\item{\code{templateSql}}{sql template}

\item{\code{translateSql}}{translate the sql for different platforms}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CohortTemplateDefinition-new}{\code{CohortTemplateDefinition$new()}}
\item \href{#method-CohortTemplateDefinition-executeTemplateSql}{\code{CohortTemplateDefinition$executeTemplateSql()}}
\item \href{#method-CohortTemplateDefinition-getTemplateReferences}{\code{CohortTemplateDefinition$getTemplateReferences()}}
\item \href{#method-CohortTemplateDefinition-getName}{\code{CohortTemplateDefinition$getName()}}
\item \href{#method-CohortTemplateDefinition-getId}{\code{CohortTemplateDefinition$getId()}}
\item \href{#method-CohortTemplateDefinition-getChecksum}{\code{CohortTemplateDefinition$getChecksum()}}
\item \href{#method-CohortTemplateDefinition-toList}{\code{CohortTemplateDefinition$toList()}}
\item \href{#method-CohortTemplateDefinition-toJson}{\code{CohortTemplateDefinition$toJson()}}
\item \href{#method-CohortTemplateDefinition-clone}{\code{CohortTemplateDefinition$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-new"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$new(
  name,
  references,
  templateSql,
  sqlArgs = list(),
  translateSql = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A name for the template definition. This is not used in the checksum of the cohort}

\item{\code{references}}{This is a data frame that must contain cohortId and cohortName. Optionally, this
can contain the columns sql and json as well. It must be bindable to a
cohort definition set instance.}

\item{\code{templateSql}}{Sql string that is used to generate the cohorts. This should be in OHDSI sql
form, translatable to other db platforms.}

\item{\code{sqlArgs}}{Optional parameters for execution of the query - for example vocabulary schema
These are arguments that should be passed to the sql. These are used in the checksum
if using paramtaried sql for different definitions (e.g. a definition requiring
varying observation lengths. This is used to distingish them)
This should not include cdm/data source
specfic parameters such as the cohort table names,
cdm database schema or vocabulary database schema. If the definition requires
runtime specific arguments (e.g. non standard tables) this presents a problem
for seralizing and uniqiuely idenitifying template cohort definitions.}

\item{\code{translateSql}}{to translate the sql or not.
To alter the execution, override this function in a subclass.
This translates and executes the sql of the cohort definition
Note that calling this function will generate the cohorts but will not do so in an incremental manner.
Checksums and timestamps will, however, be added to the generation table
ever want to call this function outside of a testing environment.
It is best practice to always use the standard runCohortGeneration/generateCohortSet pipeline to ensure
validity of execution steps.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-executeTemplateSql"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-executeTemplateSql}{}}}
\subsection{Method \code{executeTemplateSql()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$executeTemplateSql(
  connection,
  cohortDatabaseSchema,
  cdmDatabaseSchema,
  cohortTableNames,
  vocabularyDatabaseSchema = cdmDatabaseSchema,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{connection}}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{\code{cohortDatabaseSchema}}{Schema name where your cohort tables reside. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{\code{cohortDatabaseSchema}}{Schema name where your cohort tables reside. Note that for SQL Server,
this should include both the database and schema name, for example
'scratch.dbo'.}

\item{\code{cdmDatabaseSchema}}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{\code{cohortTableNames}}{The names of the cohort tables. See \code{\link{getCohortTableNames}}
for more details.}

\item{\code{vocabularyDatabaseSchema}}{vocabulary database schema}

\item{\code{tempEmulationSchema}}{cdm temp emulation schema
get template references data.frame}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-getTemplateReferences"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-getTemplateReferences}{}}}
\subsection{Method \code{getTemplateReferences()}}{
Returns data.frame of references
get the name of the definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$getTemplateReferences()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-getName"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-getName}{}}}
\subsection{Method \code{getName()}}{
Name field
get the generated id of the template definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$getName()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-getId"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-getId}{}}}
\subsection{Method \code{getId()}}{
this is not the cohort ids and is based off of the checksum of the template definition
get checksum
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$getId()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-getChecksum"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-getChecksum}{}}}
\subsection{Method \code{getChecksum()}}{
Get the hash of the definition (generated when class is instantiated)
to list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$getChecksum()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-toList"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-toList}{}}}
\subsection{Method \code{toList()}}{
For seralizing the definition
to json
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$toList()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-toJson"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-toJson}{}}}
\subsection{Method \code{toJson()}}{
json seraalized form of the template definition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$toJson()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CohortTemplateDefinition-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CohortTemplateDefinition-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CohortTemplateDefinition$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
