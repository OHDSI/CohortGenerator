[{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating Cohort Subset Definitions","text":"guide describes process creating cohort subsets using CohortGenerator. OHDSI defines cohort set persons satisfy one criteria duration time aim cohort subsets apply additional criteria cohorts define specific subgroups use various analyses. done defining subset definition includes one subset operators apply cohorts part cohort definition set.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"subset-operators","dir":"Articles","previous_headings":"Introduction","what":"Subset Operators","title":"Creating Cohort Subset Definitions","text":"Cohort generator contains three types subset operators described . Demographic subset operator demographic subset operator allows subset cohort age, gender, race ethnicity. Limit subset operator limit subset operator designed subset cohort limit based time ordinal criteria. example, might want consider first event person cohort. can use limit subset operator limit cohort based prior observation time, cohort duration even calendar start/end date. Cohort subset operator type operation allows subset cohort subjects included one cohorts. example, might interested new users metformin indication Type 2 diabetes. can define population using 2 cohorts: 1) new users metformin 2) Type 2 diabetes patients. can use 2 cohorts define target population describe “new users metformin ’s start date overlaps within Type 2 diabetes episode.” way, cohorts become reusable building blocks create new populations using existing cohort definitions.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"subset-definition","dir":"Articles","previous_headings":"Introduction","what":"Subset Definition","title":"Creating Cohort Subset Definitions","text":"Subset definitions named sets one operators () can applied set one cohorts. Operators can sequentially chained within subset definitions outputs full cohorts can passed analytical tasks.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"creating-cohort-subset-definitions","dir":"Articles","previous_headings":"","what":"Creating cohort subset definitions","title":"Creating Cohort Subset Definitions","text":"section provide overview examples define subset definition using various operators.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"cohort-definition-set","dir":"Articles","previous_headings":"Creating cohort subset definitions","what":"Cohort Definition Set","title":"Creating Cohort Subset Definitions","text":"start loading cohort definition set two cohorts example: use two cohorts subsequent examples.","code":"jsonFilePath <- system.file(\"testdata\", \"CohortsToSubset.JSON\", package = \"CohortGenerator\") cohortDefinitionSet <- jsonlite::fromJSON(jsonFilePath) cohortDefinitionSet <- cohortDefinitionSet |>   dplyr::filter(cohortId %in% c(1, 2))  cohortDefinitionSet |>   dplyr::select(\"cohortId\", \"cohortName\") |>   knitr::kable()"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"subset-operators-1","dir":"Articles","previous_headings":"Creating cohort subset definitions","what":"Subset operators","title":"Creating Cohort Subset Definitions","text":"section show can create use various subset operators create different subset definitions using two cohorts example cohort definition set. Demographic Subset Operator example demographic subset operator called ageCriteria identifies cohort subjects ages 20 - 50 years old. Limit Subset Operator example can create limit subset operator called limitToLastEver identify last cohort event happens 1 January 2000 31 December 2008. Cohort Subset Operator following example shows can identify patients ibuprofen event starts target cohort start end date: subset, use cohortId = 2 identify subjects exposed ibuprofen. combinationOperation = , states persons must exist cohortIds. define windows evaluate start/end date subset cohort (ibuprofen) relative start/end date target cohort. windows defined : subset cohort start date target cohort start date subset cohort start date must end target cohort end date","code":"ageCriteria <- CohortGenerator::createDemographicSubset(   ageMin = 20,   ageMax = 50 ) limitToLastEver <- CohortGenerator::createLimitSubset(   name = \"Last event during 1 January 2000 and 31 December 2008\",   priorTime = 0,   followUpTime = 0,   limitTo = \"lastEver\",   calendarStartDate = as.Date(\"2000-01-01\"),   calendarEndDate = as.Date(\"2008-12-31\") ) ibuprofenSubset <- CohortGenerator::createCohortSubset(   name = \"ibuprofen exposure\",   cohortIds = 2, # Ibuprofen cohort   cohortCombinationOperator = \"any\", # Look for any Ibuprofen exposure   negate = FALSE, # We want to include (not exclude) participants exposed to Ibuprofen,   windows = list(     CohortGenerator::createSubsetCohortWindow(       startDay = 0,       endDay = 9999,       targetAnchor = \"cohortStart\",       subsetAnchor = \"cohortStart\"     ),     CohortGenerator::createSubsetCohortWindow(       startDay = -9999,       endDay = 0,       targetAnchor = \"cohortEnd\",       subsetAnchor = \"cohortStart\"     )   ) )"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"create-the-subset-definition","dir":"Articles","previous_headings":"Creating cohort subset definitions","what":"Create the subset definition","title":"Creating Cohort Subset Definitions","text":"Now can use one subset operators subset definition. create subset definition patients aged 20 50: can combine multiple subset operators single subset definition. create subset patients aged 20-50 exposed ibuprofen start cohort extract last event 1 January 2000 31 December 2008:","code":"ageRequirementSubset <- CohortGenerator::createCohortSubsetDefinition(   name = \"Patients 20 to 50 years old \",   definitionId = 10,   subsetOperators = list(     ageCriteria   ),   subsetCohortNameTemplate = \"@baseCohortName - @subsetDefinitionName\" ) ibuprofenWCelcoxib <- CohortGenerator::createCohortSubsetDefinition(   name = \"Aged 20-50 yrs, last ibuprofen exposure from 2000-2008\",   definitionId = 11, # Unique ID for this subset   subsetOperators = list(     ageCriteria,     ibuprofenSubset,     limitToLastEver   ),   subsetCohortNameTemplate = \"@baseCohortName - @subsetDefinitionName\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"adding-subsets-to-cohort-definition-set","dir":"Articles","previous_headings":"Creating cohort subset definitions","what":"Adding subsets to Cohort Definition Set","title":"Creating Cohort Subset Definitions","text":"Cohort subset definitions must added cohort definition set generate subsets using CohortGenerator. , use addCohortSubsetDefinition function add subset definition cohort definition set. function allows us specify targetCohortIds receive subset definition operators. apply subset definitions target cohort celecoxib (cohortId == 1).","code":"cohortDefinitionSet <- cohortDefinitionSet |>   CohortGenerator::addCohortSubsetDefinition(ageRequirementSubset, targetCohortIds = c(1)) |>   CohortGenerator::addCohortSubsetDefinition(ibuprofenWCelcoxib, targetCohortIds = c(1)) cohortDefinitionSet |>   dplyr::select(\"cohortId\", \"cohortName\") |>   knitr::kable()"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"generating-subsets","dir":"Articles","previous_headings":"","what":"Generating subsets","title":"Creating Cohort Subset Definitions","text":"Next, ’ll use test data included CohortGenerator package demonstrate generate subsets. begin creating empty OMOP data model populating person drug exposure entries. reference, script used generate test data extras/PackageMaintenance.R. can now use sample data generate subsets: Cohort subset definitions can run incrementally. fact, base cohort definition changes reason, subsets automatically re-executed calling generateCohortSet.","code":"databaseFile <- tempfile(fileext = \".duckdb\") duckdbConnectionDetails <- DatabaseConnector::createConnectionDetails(   dbms = \"duckdb\",   server = databaseFile ) resultsSchema <- \"main\" connection <- DatabaseConnector::connect(duckdbConnectionDetails)  DatabaseConnector::insertTable(   connection = connection,   databaseSchema = resultsSchema,   tableName = \"person\",   data = omopCdmPerson ) # Insert updated data into the 'drug_exposure' table DatabaseConnector::insertTable(   connection = connection,   databaseSchema = resultsSchema,   tableName = \"drug_exposure\",   data = omopCdmDrugExposure ) cohortTableNames <- CohortGenerator::getCohortTableNames() CohortGenerator::createCohortTables(   connection = connection,   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames )   ### As subsets are a big side effect we need to be clear what was generated and have good naming conventions CohortGenerator::generateCohortSet(   connection = connection,   cdmDatabaseSchema = \"main\",   cohortDatabaseSchema = \"main\",   cohortTableNames = CohortGenerator::getCohortTableNames(),   cohortDefinitionSet = cohortDefinitionSet )"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"visualizing-subset-membership","dir":"Articles","previous_headings":"Generating subsets","what":"Visualizing subset membership","title":"Creating Cohort Subset Definitions","text":"graph show 12 subjects sample data set. subject’s graph labeled subject ID, gender age index celecoxib exposure. y-axis describes eras time subject member cohort. x-axis represents observation period subject.  subject may 0 ibuprofen (cohort ID = 2) exposures. subject member one two subsets example, era cohort ID row. example, subject 6 qualifies cohort ID 1010 identifies patients aged 20-50 years start celecoxib exposure. Similarly, subject ID 2 qualifies subsets since aged 22 also ibuprofen exposure expsoure celecoxib.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"saving-to-packagesdirectories","dir":"Articles","previous_headings":"Saving and loading subset definitions","what":"Saving to packages/directories","title":"Creating Cohort Subset Definitions","text":"Saving applied subsets can automatically added project using saveCohortDefinitionSet loading also achieved getCohortDefinitionSet subset definitions automatically loaded applied cohort definition set.","code":"saveCohortDefinitionSet(cohortDefinitionSet,   subsetJsonFolder = \"<path_to_my_subset_definition>\" ) cohortDefinitionSet <- getCohortDefinitionSet(   subsetJsonFolder = \"<path_to_my_subset_definition>\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/CreatingCohortSubsetDefinitions.html","id":"writing-json-objects","dir":"Articles","previous_headings":"Saving and loading subset definitions","what":"Writing json objects","title":"Creating Cohort Subset Definitions","text":"Subset definitions can converted JSON objects follows: purpose writing disk recommend use ParallelLogger consistency.","code":"jsonDefinition <- subsetDef$toJSON() # Save to a file ParallelLogger::saveSettingsToJson(subsetDef$toList(), \"subsetDefinition1.json\")"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"guide-for-generating-cohorts-using-cohortgenerator","dir":"Articles","previous_headings":"","what":"Guide for generating cohorts using CohortGenerator","title":"Generating Cohorts","text":"guide provide examples using CohortGenerator package generate cohorts R. vignette, walk process building cohort definition set cohorts look options available generating cohorts.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"loading-a-cohort-definition-set-from-atlas","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Basic Example","what":"Loading a cohort definition set from ATLAS","title":"Generating Cohorts","text":"can create cohorts using ATLAS download generation R using exportCohortDefinitionSet function ROhdsiWebApi package.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"loading-an-example-cohort-definition-set","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Basic Example","what":"Loading an example cohort definition set","title":"Generating Cohorts","text":"load cohort definition set using cohorts use test CohortGenerator package: code constructs cohortDefinitionSet data.frame using set cohorts come CohortGenerator package. cohortDefinitionSet data frame following columns: columns used: atlasId: ATLAS ID cohort. provides linkage back ATLAS cohort definition cohortId: cohortId atlasId upon export ATLAS. provide column case ’d like alter numbering scheme cohort definition set. cohortName: name cohort ATLAS. sql: SQL used construct cohort. json: Circe compliant JSON representation cohort definition. CirceR package used create SQL Circe json. logicDescription: description cohort ATLAS.","code":"cohortDefinitionSet <- getCohortDefinitionSet(   settingsFileName = \"testdata/name/Cohorts.csv\",   jsonFolder = \"testdata/name/cohorts\",   sqlFolder = \"testdata/name/sql/sql_server\",   cohortFileNameFormat = \"%s\",   cohortFileNameValue = c(\"cohortName\"),   packageName = \"CohortGenerator\",   verbose = FALSE )  cohortIds <- cohortDefinitionSet$cohortId cohortDefinitionSet$atlasId <- cohortDefinitionSet$cohortId cohortDefinitionSet$logicDescription <- \"\" names(cohortDefinitionSet) #> [1] \"cohortId\"         \"cohortName\"       \"json\"             \"sql\"              #> [5] \"atlasId\"          \"logicDescription\""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"saving-in-a-study-package","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Basic Example","what":"Saving in a study package","title":"Generating Cohorts","text":"cohortDefinitionSet contains details cohort like use generation. best practice, recommend embed cohort details study package. , ’ve created function save cohort definition set file system: default, saving cohort definition set create files folder called inst resources study package live. inst following folders files created: inst/settings/CohortsToCreate.csv: hold list cohorts found cohortDefinitionSet. inst/cohorts: folder contain .json file per cohort definition. inst/sql/sql_server: folder contain .sql file per cohort definition. study package can later re-construct cohortDefinitionSet reading resources using getCohortDefinitionSet function.","code":"saveCohortDefinitionSet(   cohortDefinitionSet = cohortDefinitionSet,   settingsFileName = file.path(     packageRoot,     \"inst/settings/CohortsToCreate.csv\"   ),   jsonFolder = file.path(     packageRoot,     \"inst/cohorts\"   ),   sqlFolder = file.path(     packageRoot,     \"inst/sql/sql_server\"   ) ) cohortDefinitionSet <- getCohortDefinitionSet(   settingsFileName = file.path(     packageRoot, \"inst/settings/CohortsToCreate.csv\"   ),   jsonFolder = file.path(packageRoot, \"inst/cohorts\"),   sqlFolder = file.path(packageRoot, \"inst/sql/sql_server\") )"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"generating-cohorts","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Basic Example","what":"Generating Cohorts","title":"Generating Cohorts","text":"Now created cohortDefinitionSet, ’re ready generate cohorts OMOP CDM. example, use Eunomia data set CDM. code starts obtaining connectionDetails Eunomia. ’ll likely want substitute connection information. Next, call getCohortTableNames obtain list cohortTableNames ’ll use generation process. call createCohortTables create cohort tables database server cohortDatabaseSchema. tables created, use function generateCohortSet generate cohortDefinitionSet. calling generateCohortSet, must specify schema holds CDM (cdmDatabaseSchema), location cohortDatabaseSchema cohortTableNames cohort(s) generated. cover parameters available Advanced Options section. ’d like see results generation process, can use getCohortCounts method query cohort table summary persons events cohort:","code":"# Get the Eunomia connection details connectionDetails <- Eunomia::getEunomiaConnectionDetails()  # First get the cohort table names to use for this generation task cohortTableNames <- getCohortTableNames(cohortTable = \"cg_example\")  # Next create the tables on the database createCohortTables(   connectionDetails = connectionDetails,   cohortTableNames = cohortTableNames,   cohortDatabaseSchema = \"main\" )  # Generate the cohort set cohortsGenerated <- generateCohortSet(   connectionDetails = connectionDetails,   cdmDatabaseSchema = \"main\",   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   cohortDefinitionSet = cohortDefinitionSet ) getCohortCounts(   connectionDetails = connectionDetails,   cohortDatabaseSchema = \"main\",   cohortTable = cohortTableNames$cohortTable ) #> Connecting using SQLite driver #> Counting cohorts took 0.057 secs #>   cohortId cohortEntries cohortSubjects #> 1        1          1800           1800 #> 2        2           569            569 #> 3        3           266            266 #> 4        4          1750           1750"},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"cohort-statistics-inclusion-rule-statistics","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Advanced Options","what":"Cohort Statistics (Inclusion Rule Statistics)","title":"Generating Cohorts","text":"Cohorts defined ATLAS may define one inclusion criteria part cohort’s logic. part cohort generation, may want capture cohort statistics use packages. example, CohortDiagnostics functionality allows review inclusion rule statistics understand rules may materialize data sources. review generate cohorts inclusion rule statistics export results use downstream packages CohortDiagnostics. constructed cohorts ATLAS, can use exportCohortDefinitionSet function ROhdsiWebApi package. exportCohortDefinitionSet function additional parameter called generateStats set TRUE include SQL necessary generate cohort statistics. Building previous example loaded cohort set CohortGenerator package, let’s include code build SQL cohort statistics: code , read cohort JSON files package use CirceR build cohort query SQL using CirceR::buildCohortQuery command. Note function specifying options = CirceR::createGenerateOptions(generateStats = TRUE) indicate SQL include code necessary compute cohort statistics. Next ’ll create tables store cohort cohort statistics. can generate cohorts. stage, cohorts generated cohort statistics available cohort statistics tables. next step export results file system done using code : code performs two steps. First, insert inclusion rule names Circe expressions cohortDefinitionSet. important since names automatically inserted database generating cohorts. Second, export cohort statistics file system write comma separated value (CSV) files per cohort statistic table InclusionStats folder. exported cohort statistics, can optionally drop statistics tables using following command:","code":"# First construct a cohort definition set: an empty # data frame with the cohorts to generate cohortDefinitionSet <- CohortGenerator::createEmptyCohortDefinitionSet()  # Fill the cohort set using  cohorts included in this # package as an example cohortJsonFiles <- list.files(path = system.file(\"testdata/name/cohorts\", package = \"CohortGenerator\"), full.names = TRUE) for (i in 1:length(cohortJsonFiles)) {   cohortJsonFileName <- cohortJsonFiles[i]   cohortName <- tools::file_path_sans_ext(basename(cohortJsonFileName))   # Here we read in the JSON in order to create the SQL   # using [CirceR](https://ohdsi.github.io/CirceR/)   # If you have your JSON and SQL stored differently, you can   # modify this to read your JSON/SQL files however you require   cohortJson <- readChar(cohortJsonFileName, file.info(cohortJsonFileName)$size)   cohortExpression <- CirceR::cohortExpressionFromJson(cohortJson)   cohortSql <- CirceR::buildCohortQuery(cohortExpression, options = CirceR::createGenerateOptions(generateStats = TRUE))   cohortDefinitionSet <- rbind(cohortDefinitionSet, data.frame(     cohortId = i,     cohortName = cohortName,     json = cohortJson,     sql = cohortSql,     stringsAsFactors = FALSE   )) } # First get the cohort table names to use for this generation task cohortTableNames <- getCohortTableNames(cohortTable = \"stats_example\")  # Next create the tables on the database createCohortTables(   connectionDetails = connectionDetails,   cohortTableNames = cohortTableNames,   cohortDatabaseSchema = \"main\" )  # We can then generate the cohorts the same way as before and it will use the # cohort statstics tables to store the results # Generate the cohort set generateCohortSet(   connectionDetails = connectionDetails,   cdmDatabaseSchema = \"main\",   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   cohortDefinitionSet = cohortDefinitionSet ) insertInclusionRuleNames(   connectionDetails = connectionDetails,   cohortDefinitionSet = cohortDefinitionSet,   cohortDatabaseSchema = \"main\",   cohortInclusionTable = cohortTableNames$cohortInclusionTable )  exportCohortStatsTables(   connectionDetails = connectionDetails,   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   cohortStatisticsFolder = file.path(someFolder, \"InclusionStats\") ) dropCohortStatsTables(   connectionDetails = connectionDetails,   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames )"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"incremental-mode","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Advanced Options","what":"Incremental Mode","title":"Generating Cohorts","text":"CohortGenerator provides incremental option functions. purpose incremental setting allow code attempt skip operation already completed . example, context cohort generation may want keep track cohorts already generated source skip know cohort definition changed. illustrate incremental mode explain works, ’ll continue along example earlier. expected, code created cohort tables requested. hood, since incremental = TRUE set, code check database see tables already exist creating . verify , can call function check results: use incremental = TRUE allows assurance tables results previous runs preserved. Next, can generate cohortDefinitionSet incremental mode. indicate performing operational incrementally specifying incremental = TRUE specifying folder holding record keeping file track cohorts generated: incrementalFolder = file.path(someFolder, \"RecordKeeping\"). cohort generated incremental mode, cohort ID checksum cohort SQL saved incrementalFolder file called GeneratedCohorts.csv. attempt re-generate cohort set incremental mode, generateCohortSet inspect SQL cohort cohortDefinitionSet checksum cohort matches checksum found incrementalFolder cohort ID, generation skipped. illustrate looks:","code":"# Create a set of tables for this example cohortTableNames <- getCohortTableNames(cohortTable = \"cohort\") createCohortTables(   connectionDetails = connectionDetails,   cohortTableNames = cohortTableNames,   cohortDatabaseSchema = \"main\",   incremental = TRUE ) createCohortTables(   connectionDetails = connectionDetails,   cohortTableNames = cohortTableNames,   cohortDatabaseSchema = \"main\",   incremental = TRUE ) #> Connecting using SQLite driver #> Table \"cohort\" already exists and in incremental mode, so not recreating it. #> Table \"cohort\" already exists and in incremental mode, so not recreating it. #> Table \"cohort_inclusion\" already exists and in incremental mode, so not recreating it. #> Table \"cohort_inclusion_result\" already exists and in incremental mode, so not recreating it. #> Table \"cohort_inclusion_stats\" already exists and in incremental mode, so not recreating it. #> Table \"cohort_summary_stats\" already exists and in incremental mode, so not recreating it. #> Table \"cohort_censor_stats\" already exists and in incremental mode, so not recreating it. generateCohortSet(   connectionDetails = connectionDetails,   cdmDatabaseSchema = \"main\",   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   cohortDefinitionSet = cohortDefinitionSet,   incremental = TRUE,   incrementalFolder = file.path(someFolder, \"RecordKeeping\") ) generateCohortSet(   connectionDetails = connectionDetails,   cdmDatabaseSchema = \"main\",   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   cohortDefinitionSet = cohortDefinitionSet,   incremental = TRUE,   incrementalFolder = file.path(someFolder, \"RecordKeeping\") ) #> Connecting using SQLite driver #> Initiating cluster consisting only of main thread #> Skipping cohortId = '1' because it is unchanged from earlier run #> Skipping cohortId = '2' because it is unchanged from earlier run #> Skipping cohortId = '3' because it is unchanged from earlier run #> Skipping cohortId = '4' because it is unchanged from earlier run #> Generating cohort set took 0.03 secs"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html","id":"potential-pitfalls-of-incremental-mode","dir":"Articles","previous_headings":"Guide for generating cohorts using CohortGenerator > Advanced Options > Incremental Mode","what":"Potential Pitfalls of Incremental Mode","title":"Generating Cohorts","text":"Incremental mode makes assumptions provide flexible way generate cohorts. assumptions come risks like highlight: Record keeping files: incremental approach cohort generation makes use record keeping file check cohort already generated. check database verify need take care preserve file system store record keeping file. file removed, CohortGenerator simply repeat cohort generation process.","code":"options(old)"},{"path":"https://ohdsi.github.io/CohortGenerator/articles/SamplingCohorts.html","id":"sampling-with-cohortgenerator","dir":"Articles","previous_headings":"","what":"Sampling with CohortGenerator","title":"Sampling Cohorts","text":"Large populations individuals (e.g. subjects receiving COVID-19 vaccination) can often large work pulling large collection covariates analysis. prohibitive designing studies attempting generate phenotypes. guide aims demonstrate one can use sampleCohortDefinitionSet functionality produce sufficiently large sample cohorts base cohortDefinitionSet.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/SamplingCohorts.html","id":"sampling-method","dir":"Articles","previous_headings":"Sampling with CohortGenerator","what":"Sampling method","title":"Sampling Cohorts","text":"approach taken method sample individuals within cohort without replacement. Different database platforms implement variety different approaches random sampling random number generation make cross platform sql difficult. Consequently, randomness computed happens inside R simply count unique individuals within cohort.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/articles/SamplingCohorts.html","id":"using-the-sampler-functions","dir":"Articles","previous_headings":"Sampling with CohortGenerator","what":"Using the sampler functions","title":"Sampling Cohorts","text":"create single sample approach create cohorts base table. First need load initial cohort definition set need create cohort tables cohorts usual manner. can create new cohort definition set original sample. resulting sampledCohortDefinitionSet nearly identical base cohort set, however changes occur: name now include postfix [sample 33% seed=64374] optional parameter idExpression changes cohort name. default set cohortId * 1000 + seed however, throw error ids base cohortDefinitionSet attached attribute sampledCohortDefinitionSet generate multiple samples, simply specify multiple seed variables follows: Note using incremental mode sampled cohorts also work. case, cohort re-generated checksum base cohort changed (checksum based cohort SQL). checksum applies pseudorandom seed cohort sample size (n). sampledCohortDefinitionSet , intents purposes, set cohortDefinitions can passed parameter OHDSI packages minimal issues. example, FeatureExtraction able use sample unchanged.","code":"cds <- getCohortDefinitionSet(...) connectionDetails <- Eunomia::getEunomiaConnectionDetails() conn <- DatabaseConnector::connect(connectionDetails = connectionDetails) on.exit(DatabaseConnector::disconnect(conn))   cds <- getCohortDefinitionSet(...) cohortTableNames <- getCohortTableNames(cohortTable = \"cohort\") recordKeepingFolder <- file.path(outputFolder, \"RecordKeepingSamples\")  createCohortTables(   connectionDetails = connectionDetails,   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames )  generateCohortSet(   cohortDefinitionSet = cds,   connection = conn,   cdmDatabaseSchema = \"main\",   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   incremental = TRUE,   incrementalFolder = recordKeepingFolder ) sampledCohortDefinitionSet <- sampleCohortDefinitionSet(   cohortDefinitionSet = cds,   connection = conn,   sampleFraction = 0.33,   seed = 64374, # OHDSI   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   incremental = TRUE,   incrementalFolder = recordKeepingFolder ) # Generate 800 samples of size n sampledCohortDefinitionSet <- sampleCohortDefinitionSet(   cohortDefinitionSet = cds,   connection = conn,   n = 1000,   seed = 1:800 * 64374, # OHDSI   cohortDatabaseSchema = \"main\",   cohortTableNames = cohortTableNames,   incremental = TRUE,   incrementalFolder = recordKeepingFolder ) options(old)"},{"path":"https://ohdsi.github.io/CohortGenerator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anthony Sena. Author, maintainer. Jamie Gilbert. Author. Gowtham Rao. Author. Freddy Avila Cruz. Author. Martijn Schuemie. Author. Observational Health Data Science Informatics. Copyright holder.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sena , Gilbert J, Rao G, Avila Cruz F, Schuemie M (2025). CohortGenerator: Cohort Generation OMOP Common Data Model. R package version 0.12.0, https://ohdsi.github.io/CohortGenerator/.","code":"@Manual{,   title = {CohortGenerator: Cohort Generation for the OMOP Common Data Model},   author = {Anthony Sena and Jamie Gilbert and Gowtham Rao and Freddy {Avila Cruz} and Martijn Schuemie},   year = {2025},   note = {R package version 0.12.0},   url = {https://ohdsi.github.io/CohortGenerator/}, }"},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"cohortgenerator","dir":"","previous_headings":"","what":"Cohort Generation for the OMOP Common Data Model","title":"Cohort Generation for the OMOP Common Data Model","text":"CohortGenerator part HADES.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Cohort Generation for the OMOP Common Data Model","text":"R package contains functions generating cohorts cohort subsets using data CDM.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Cohort Generation for the OMOP Common Data Model","text":"Create cohort table generate cohorts OMOP CDM. Get count subjects events cohort. Define subsets cohorts using different criteria cohorts. Provides functions performing incremental tasks. used CohortGenerator skip cohorts successfully generated previous run. functionality generic enough packages use performing incremental tasks.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Cohort Generation for the OMOP Common Data Model","text":"","code":"# First construct a cohort definition set: an empty  # data frame with the cohorts to generate cohortsToCreate <- CohortGenerator::createEmptyCohortDefinitionSet()  # Fill the cohort set using  cohorts included in this  # package as an example cohortJsonFiles <- list.files(path = system.file(\"testdata/name/cohorts\", package = \"CohortGenerator\"), full.names = TRUE) for (i in 1:length(cohortJsonFiles)) {   cohortJsonFileName <- cohortJsonFiles[i]   cohortName <- tools::file_path_sans_ext(basename(cohortJsonFileName))   # Here we read in the JSON in order to create the SQL   # using [CirceR](https://ohdsi.github.io/CirceR/)   # If you have your JSON and SQL stored differenly, you can   # modify this to read your JSON/SQL files however you require   cohortJson <- readChar(cohortJsonFileName, file.info(cohortJsonFileName)$size)   cohortExpression <- CirceR::cohortExpressionFromJson(cohortJson)   cohortSql <- CirceR::buildCohortQuery(cohortExpression, options = CirceR::createGenerateOptions(generateStats = FALSE))   cohortsToCreate <- rbind(cohortsToCreate, data.frame(cohortId = i,                                                        cohortName = cohortName,                                                         sql = cohortSql,                                                        stringsAsFactors = FALSE)) }  # Generate the cohort set against Eunomia.  # cohortsGenerated contains a list of the cohortIds  # successfully generated against the CDM connectionDetails <- Eunomia::getEunomiaConnectionDetails()  # Create the cohort tables to hold the cohort generation results cohortTableNames <- CohortGenerator::getCohortTableNames(cohortTable = \"my_cohort_table\") CohortGenerator::createCohortTables(connectionDetails = connectionDetails,                                                         cohortDatabaseSchema = \"main\",                                                         cohortTableNames = cohortTableNames) # Generate the cohorts cohortsGenerated <- CohortGenerator::generateCohortSet(connectionDetails = connectionDetails,                                                        cdmDatabaseSchema = \"main\",                                                        cohortDatabaseSchema = \"main\",                                                        cohortTableNames = cohortTableNames,                                                        cohortDefinitionSet = cohortsToCreate)  # Get the cohort counts cohortCounts <- CohortGenerator::getCohortCounts(connectionDetails = connectionDetails,                                                  cohortDatabaseSchema = \"main\",                                                  cohortTable = cohortTableNames$cohortTable) print(cohortCounts)"},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"technology","dir":"","previous_headings":"","what":"Technology","title":"Cohort Generation for the OMOP Common Data Model","text":"CohortGenerator R package.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"system-requirements","dir":"","previous_headings":"","what":"System requirements","title":"Cohort Generation for the OMOP Common Data Model","text":"Requires R (version 3.6.0 higher).","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Cohort Generation for the OMOP Common Data Model","text":"Make sure R environment properly configured. means Java must installed. See instructions configure R environment. R, use following commands download install CohortGenerator:","code":"remotes::install_github(\"OHDSI/CohortGenerator\")"},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"user-documentation","dir":"","previous_headings":"","what":"User Documentation","title":"Cohort Generation for the OMOP Common Data Model","text":"Documentation can found package website. PDF versions documentation also available: Vignette: Generating Cohorts Package manual: CohortGenerator.pdf","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Cohort Generation for the OMOP Common Data Model","text":"Developer questions/comments/feedback: OHDSI Forum use GitHub issue tracker bugs/issues/enhancements","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Cohort Generation for the OMOP Common Data Model","text":"Read can contribute package.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Cohort Generation for the OMOP Common Data Model","text":"CohortGenerator licensed Apache License 2.0","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Cohort Generation for the OMOP Common Data Model","text":"package developed RStudio.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/index.html","id":"development-status","dir":"","previous_headings":"","what":"Development status","title":"Cohort Generation for the OMOP Common Data Model","text":"Beta","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortGenerator-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortGenerator: Cohort Generation for the OMOP Common Data Model — CohortGenerator-package","title":"CohortGenerator: Cohort Generation for the OMOP Common Data Model — CohortGenerator-package","text":"Generate cohorts subsets using Observational Medical Outcomes Partnership (OMOP) Common Data Model (CDM) Database. Cohorts defined using 'CIRCE' (https://github.com/ohdsi/circe-) SQL compatible 'SqlRender' (https://github.com/OHDSI/SqlRender).","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortGenerator-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortGenerator: Cohort Generation for the OMOP Common Data Model — CohortGenerator-package","text":"Maintainer: Anthony Sena sena@ohdsi.org Authors: Jamie Gilbert Gowtham Rao gowthamrao@gmail.com Freddy Avila Cruz Martijn Schuemie schuemie@ohdsi.org contributors: Observational Health Data Science Informatics [copyright holder]","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohort Subset Definition — CohortSubsetDefinition","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"Set subset definitions","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"targetOutputPairs list pairs integers - (targetCohortId, outputCohortId) subsetOperators list subset operations name name definition subsetCohortNameTemplate template string formatting resulting cohort names operatorNameConcatString string used concatenating operator names together definitionId numeric definition id identifierExpression expression can evaluated ","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"CohortSubsetDefinition$new() CohortSubsetDefinition$toList() CohortSubsetDefinition$toJSON() CohortSubsetDefinition$addSubsetOperator() CohortSubsetDefinition$getSubsetQuery() CohortSubsetDefinition$getSubsetCohortName() CohortSubsetDefinition$setTargetOutputPairs() CohortSubsetDefinition$getJsonFileName() CohortSubsetDefinition$clone()","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$new(definition = NULL)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"definition json list representation object List","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"List representation object JSON","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$toList()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"method-tojson-","dir":"Reference","previous_headings":"","what":"Method toJSON()","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"json serialized representation object add Subset Operator","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$toJSON()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"method-addsubsetoperator-","dir":"Reference","previous_headings":"","what":"Method addSubsetOperator()","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"add subset class - checks equivalent id present throw error matching ID found reference object different","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$addSubsetOperator(subsetOperator)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"subsetOperator SubsetOperator instance overwrite subset operator ID present, replace new definition get query given target output pair","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"method-getsubsetquery-","dir":"Reference","previous_headings":"","what":"Method getSubsetQuery()","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"Returns vector join, logic, statements returned subset operations","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$getSubsetQuery(targetOutputPair)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"targetOutputPair Target output pair Get name output cohort","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$getSubsetCohortName(   cohortDefinitionSet,   targetOutputPair )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"cohortDefinitionSet Cohort definition set containing base names targetOutputPair Target output pair Set targetOutputPairs added cohort definition set","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$setTargetOutputPairs(targetIds)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"targetIds list cohort ids apply subsetting operations Get json file name subset definition folder","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$getJsonFileName(   subsetJsonFolder = \"inst/cohort_subset_definitions/\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"subsetJsonFolder path folder place file","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"objects class cloneable method.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"","code":"CohortSubsetDefinition$clone(deep = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetDefinition.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Definition — CohortSubsetDefinition","text":"deep Whether make deep clone.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohort Subset Operator — CohortSubsetOperator","title":"Cohort Subset Operator — CohortSubsetOperator","text":"subset type cohort - subset population contained within defined cohort","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Cohort Subset Operator — CohortSubsetOperator","text":"CohortGenerator::SubsetOperator -> CohortSubsetOperator","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Cohort Subset Operator — CohortSubsetOperator","text":"cohortIds Integer ids cohorts subset cohortCombinationOperator combine cohorts negate Inverse subset rule? TRUE take patients subset windows list time windows use evaluating subset cohort relative target cohort","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cohort Subset Operator — CohortSubsetOperator","text":"CohortGenerator::SubsetOperator$classname() CohortGenerator::SubsetOperator$getQueryBuilder() CohortGenerator::SubsetOperator$isEqualTo() CohortGenerator::SubsetOperator$publicFields() CohortGenerator::SubsetOperator$toJSON()","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cohort Subset Operator — CohortSubsetOperator","text":"CohortSubsetOperator$new() CohortSubsetOperator$toList() CohortSubsetOperator$getAutoGeneratedName() CohortSubsetOperator$clone()","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Operator — CohortSubsetOperator","text":"","code":"CohortSubsetOperator$new(definition = NULL)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Operator — CohortSubsetOperator","text":"definition json character list - definition subset operator","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Cohort Subset Operator — CohortSubsetOperator","text":"instance object List","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"Cohort Subset Operator — CohortSubsetOperator","text":"List representation object Get auto generated name","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Operator — CohortSubsetOperator","text":"","code":"CohortSubsetOperator$toList()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"method-getautogeneratedname-","dir":"Reference","previous_headings":"","what":"Method getAutoGeneratedName()","title":"Cohort Subset Operator — CohortSubsetOperator","text":"name generated subset operation properties","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Operator — CohortSubsetOperator","text":"","code":"CohortSubsetOperator$getAutoGeneratedName()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Cohort Subset Operator — CohortSubsetOperator","text":"character","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cohort Subset Operator — CohortSubsetOperator","text":"objects class cloneable method.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohort Subset Operator — CohortSubsetOperator","text":"","code":"CohortSubsetOperator$clone(deep = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/CohortSubsetOperator.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohort Subset Operator — CohortSubsetOperator","text":"deep Whether make deep clone.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic Subset Operator — DemographicSubsetOperator","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"Operators subsetting cohort demographic criteria","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"char vector Get auto generated name","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"CohortGenerator::SubsetOperator -> DemographicSubsetOperator","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"ageMin Int 0 99999 - minimum age ageMax Int 0 99999 - maximum age gender vector gender concept IDs race character string denoting race ethnicity character string denoting ethnicity","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"CohortGenerator::SubsetOperator$classname() CohortGenerator::SubsetOperator$getQueryBuilder() CohortGenerator::SubsetOperator$initialize() CohortGenerator::SubsetOperator$publicFields()","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"DemographicSubsetOperator$toList() DemographicSubsetOperator$mapGenderConceptsToNames() DemographicSubsetOperator$getAutoGeneratedName() DemographicSubsetOperator$toJSON() DemographicSubsetOperator$isEqualTo() DemographicSubsetOperator$getGender() DemographicSubsetOperator$getRace() DemographicSubsetOperator$getEthnicity() DemographicSubsetOperator$clone()","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"List representation object Map gender concepts names","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$toList()"},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$mapGenderConceptsToNames(   mapping = list(`8507` = \"males\", `8532` = \"females\", `0` = \"unknown gender\") )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"mapping optional list mappings concept id nouns","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-getautogeneratedname-","dir":"Reference","previous_headings":"","what":"Method getAutoGeneratedName()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"name generated subset operation properties","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$getAutoGeneratedName()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"character","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-tojson-","dir":"Reference","previous_headings":"","what":"Method toJSON()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"json serialized representation object","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$toJSON()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-isequalto-","dir":"Reference","previous_headings":"","what":"Method isEqualTo()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"Compare Subset another","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$isEqualTo(criteria)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"criteria DemographicSubsetOperator instance","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-getgender-","dir":"Reference","previous_headings":"","what":"Method getGender()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"Gender getter - used constructing SQL default NULL empty string","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$getGender()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-getrace-","dir":"Reference","previous_headings":"","what":"Method getRace()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"Race getter - used constructing SQL default NULL empty string","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$getRace()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-getethnicity-","dir":"Reference","previous_headings":"","what":"Method getEthnicity()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"Ethnicity getter - used constructing SQL default NULL empty string","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$getEthnicity()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"objects class cloneable method.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"","code":"DemographicSubsetOperator$clone(deep = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/DemographicSubsetOperator.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demographic Subset Operator — DemographicSubsetOperator","text":"deep Whether make deep clone.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit Subset Operator — LimitSubsetOperator","title":"Limit Subset Operator — LimitSubsetOperator","text":"operator apply limiting subset operations (e.g. washout periods, calendar ranges earliest entries) Get auto generated name","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Limit Subset Operator — LimitSubsetOperator","text":"CohortGenerator::SubsetOperator -> LimitSubsetOperator","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Limit Subset Operator — LimitSubsetOperator","text":"priorTime minimum washout time days followUpTime minimum required follow time days minimumCohortDuration minimum cohort duration time days limitTo character one :                              \"firstEver\" - first entry patient history                              \"earliestRemaining\" - first entry washout set priorTime                              \"latestRemaining\" -  latest remaining washout set followUpTime                              \"lastEver\" - last entry patient history inside Note, using firstEver lastEver follow washout, patients events                          outside censored. calendarStartDate calendar start date limiting date calendarEndDate calendar end date limiting date","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Limit Subset Operator — LimitSubsetOperator","text":"CohortGenerator::SubsetOperator$classname() CohortGenerator::SubsetOperator$getQueryBuilder() CohortGenerator::SubsetOperator$initialize() CohortGenerator::SubsetOperator$isEqualTo() CohortGenerator::SubsetOperator$publicFields() CohortGenerator::SubsetOperator$toJSON()","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Limit Subset Operator — LimitSubsetOperator","text":"LimitSubsetOperator$getAutoGeneratedName() LimitSubsetOperator$toList() LimitSubsetOperator$clone()","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"method-getautogeneratedname-","dir":"Reference","previous_headings":"","what":"Method getAutoGeneratedName()","title":"Limit Subset Operator — LimitSubsetOperator","text":"name generated subset operation properties","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit Subset Operator — LimitSubsetOperator","text":"","code":"LimitSubsetOperator$getAutoGeneratedName()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Limit Subset Operator — LimitSubsetOperator","text":"character List","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"Limit Subset Operator — LimitSubsetOperator","text":"List representation object","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit Subset Operator — LimitSubsetOperator","text":"","code":"LimitSubsetOperator$toList()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Limit Subset Operator — LimitSubsetOperator","text":"objects class cloneable method.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit Subset Operator — LimitSubsetOperator","text":"","code":"LimitSubsetOperator$clone(deep = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/LimitSubsetOperator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit Subset Operator — LimitSubsetOperator","text":"deep Whether make deep clone.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Window For Cohort Subset Operator — SubsetCohortWindow","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"Representation time window use subsetting target cohort subset cohort","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"startDay Integer endDay Integer targetAnchor Boolean subsetAnchor Boolean negate Boolean","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"SubsetCohortWindow$toList() SubsetCohortWindow$toJSON() SubsetCohortWindow$isEqualTo() SubsetCohortWindow$clone()","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"List representation object JSON","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"","code":"SubsetCohortWindow$toList()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"method-tojson-","dir":"Reference","previous_headings":"","what":"Method toJSON()","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"json serialized representation object Equal ","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"","code":"SubsetCohortWindow$toJSON()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"method-isequalto-","dir":"Reference","previous_headings":"","what":"Method isEqualTo()","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"Compare SubsetCohortWindow another","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"","code":"SubsetCohortWindow$isEqualTo(criteria)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"criteria SubsetCohortWindow instance","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"objects class cloneable method.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"","code":"SubsetCohortWindow$clone(deep = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetCohortWindow.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Window For Cohort Subset Operator — SubsetCohortWindow","text":"deep Whether make deep clone.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract base class for subsets. — SubsetOperator","title":"Abstract base class for subsets. — SubsetOperator","text":"Abstract Base Class subsets. Subsets inherit implement requirements.","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract base class for subsets. — SubsetOperator","text":"name name subset operation - describe operation e.g. \"Males age 18\", \"Exposed Celecoxib\"","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract base class for subsets. — SubsetOperator","text":"SubsetOperator$new() SubsetOperator$classname() SubsetOperator$getAutoGeneratedName() SubsetOperator$getQueryBuilder() SubsetOperator$publicFields() SubsetOperator$isEqualTo() SubsetOperator$toList() SubsetOperator$toJSON() SubsetOperator$clone()","code":""},{"path":[]},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$new(definition = NULL)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract base class for subsets. — SubsetOperator","text":"definition json character list - definition subset operator","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract base class for subsets. — SubsetOperator","text":"instance object Class Name","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-classname-","dir":"Reference","previous_headings":"","what":"Method classname()","title":"Abstract base class for subsets. — SubsetOperator","text":"Class name object Get auto generated name","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$classname()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-getautogeneratedname-","dir":"Reference","previous_headings":"","what":"Method getAutoGeneratedName()","title":"Abstract base class for subsets. — SubsetOperator","text":"intended used - implemented subclasses Return query builder instance","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$getAutoGeneratedName()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-getquerybuilder-","dir":"Reference","previous_headings":"","what":"Method getQueryBuilder()","title":"Abstract base class for subsets. — SubsetOperator","text":"Return query builder instance Public Fields","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$getQueryBuilder(id)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract base class for subsets. — SubsetOperator","text":"id - integer unique sql (e.g. increment one subset operation set)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-publicfields-","dir":"Reference","previous_headings":"","what":"Method publicFields()","title":"Abstract base class for subsets. — SubsetOperator","text":"Publicly settable fields object Equal ","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$publicFields()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-isequalto-","dir":"Reference","previous_headings":"","what":"Method isEqualTo()","title":"Abstract base class for subsets. — SubsetOperator","text":"Compare Subsets - identical ? Checks fields settings","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$isEqualTo(subsetOperatorB)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract base class for subsets. — SubsetOperator","text":"subsetOperatorB subset test equivalence list","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"Abstract base class for subsets. — SubsetOperator","text":"convert List representation Json","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$toList()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-tojson-","dir":"Reference","previous_headings":"","what":"Method toJSON()","title":"Abstract base class for subsets. — SubsetOperator","text":"convert json serialized representation","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$toJSON()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract base class for subsets. — SubsetOperator","text":"list representation object json character","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract base class for subsets. — SubsetOperator","text":"objects class cloneable method.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract base class for subsets. — SubsetOperator","text":"","code":"SubsetOperator$clone(deep = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/SubsetOperator.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract base class for subsets. — SubsetOperator","text":"deep Whether make deep clone.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/addCohortSubsetDefinition.html","id":null,"dir":"Reference","previous_headings":"","what":"Add cohort subset definition to a cohort definition set — addCohortSubsetDefinition","title":"Add cohort subset definition to a cohort definition set — addCohortSubsetDefinition","text":"Given subset definition cohort definition set, function returns modified cohortDefinitionSet contains cohorts parent's contained within base cohortDefinitionSet Also adds columns subsetParent isSubset denote cohort subset parent definition .","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/addCohortSubsetDefinition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add cohort subset definition to a cohort definition set — addCohortSubsetDefinition","text":"","code":"addCohortSubsetDefinition(   cohortDefinitionSet,   cohortSubsetDefintion,   targetCohortIds = NULL,   overwriteExisting = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/addCohortSubsetDefinition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add cohort subset definition to a cohort definition set — addCohortSubsetDefinition","text":"cohortDefinitionSet data.frame conforms CohortDefinitionSet cohortSubsetDefintion CohortSubsetDefinition instance targetCohortIds Cohort ids apply subset definition . set, subset definition applied base cohorts set (.e. defined subsetOperators). Applying cohorts already subsets permitted, however, done care identifiers must specified manually overwriteExisting Overwrite existing subset definition definitionId present","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/checkAndFixCohortDefinitionSetDataTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a cohort definition set is using the proper data types — checkAndFixCohortDefinitionSetDataTypes","title":"Check if a cohort definition set is using the proper data types — checkAndFixCohortDefinitionSetDataTypes","text":"function checks data.frame verify holds expected format cohortDefinitionSet's data types can optionally fix data types match specification.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/checkAndFixCohortDefinitionSetDataTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a cohort definition set is using the proper data types — checkAndFixCohortDefinitionSetDataTypes","text":"","code":"checkAndFixCohortDefinitionSetDataTypes(   x,   fixDataTypes = TRUE,   emitWarning = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/checkAndFixCohortDefinitionSetDataTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a cohort definition set is using the proper data types — checkAndFixCohortDefinitionSetDataTypes","text":"x cohortDefinitionSet data.frame check fixDataTypes TRUE, function attempt fix data types match specification. @seealso [createEmptyCohortDefinitionSet()]. emitWarning TRUE, function emit warning messages problems encountered.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/checkAndFixCohortDefinitionSetDataTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a cohort definition set is using the proper data types — checkAndFixCohortDefinitionSetDataTypes","text":"Returns list() following form: list(    dataTypesMatch = TRUE/FALSE,    x = data.frame() ) dataTypesMatch == TRUE supplied data.frame x matches cohortDefinitionSet specification's data types. fixDataTypes == TRUE, x hold original data x data types corrected. Otherwise x hold original value passed function.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/computeChecksum.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the checksum for a value — computeChecksum","title":"Computes the checksum for a value — computeChecksum","text":"used part incremental operations hash value store record keeping file. function leverages md5 hash digest package","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/computeChecksum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the checksum for a value — computeChecksum","text":"","code":"computeChecksum(val)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/computeChecksum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the checksum for a value — computeChecksum","text":"val value hash. converted character perform hash.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/computeChecksum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the checksum for a value — computeChecksum","text":"Returns string containing checksum","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubset.html","id":null,"dir":"Reference","previous_headings":"","what":"A definition of subset functions to be applied to a set of cohorts — createCohortSubset","title":"A definition of subset functions to be applied to a set of cohorts — createCohortSubset","text":"definition subset functions applied set cohorts","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A definition of subset functions to be applied to a set of cohorts — createCohortSubset","text":"","code":"createCohortSubset(   name = NULL,   cohortIds,   cohortCombinationOperator,   negate,   windows = list(),   startWindow = NULL,   endWindow = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A definition of subset functions to be applied to a set of cohorts — createCohortSubset","text":"name optional name operator cohortIds integer - set cohort ids subset cohortCombinationOperator \"\" \"\" using one cohort id allow subject cohort require cohorts specified windows negate opposite definition - include patients meet specified criteria windows list time windows use evaluate subset cohorts relation target  cohorts. logic always apply windows logical conditions. See [@seealso [createSubsetCohortWindow()]] details create windows. startWindow DEPRECATED: Use `windows` instead. endWindow DEPRECATED: Use `windows` instead.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A definition of subset functions to be applied to a set of cohorts — createCohortSubset","text":"CohortSubsetOperator instance","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubsetDefinition.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Subset Definition — createCohortSubsetDefinition","title":"Create Subset Definition — createCohortSubsetDefinition","text":"Create subset definition subset objects","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubsetDefinition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Subset Definition — createCohortSubsetDefinition","text":"","code":"createCohortSubsetDefinition(   name,   definitionId,   subsetOperators,   identifierExpression = NULL,   operatorNameConcatString = \"\",   subsetCohortNameTemplate = \"\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortSubsetDefinition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Subset Definition — createCohortSubsetDefinition","text":"name Name definition definitionId Definition identifier subsetOperators list subsetOperator instances apply identifierExpression Expression (string converts expression) returns id output cohort default dplyr::expr(targetId * 1000 + definitionId) operatorNameConcatString (optional) String concatenate operator names together outputting resulting cohort name subsetCohortNameTemplate (optional) SqlRender string template formatting names resulting subset cohorts Can use variables @baseCohortName, @subsetDefinitionName @operatorNames. applied adding subset definition cohort definition set.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cohort tables — createCohortTables","title":"Create cohort tables — createCohortTables","text":"function creates empty cohort table empty tables cohort statistics.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cohort tables — createCohortTables","text":"","code":"createCohortTables(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema,   cohortTableNames = getCohortTableNames(),   incremental = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createCohortTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cohort tables — createCohortTables","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTableNames names cohort tables. See getCohortTableNames details. incremental set TRUE, function check see cohortTableNames exists cohortDatabaseSchema exist, skip creating tables.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createDemographicSubset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create createDemographicSubset Subset — createDemographicSubset","title":"Create createDemographicSubset Subset — createDemographicSubset","text":"Create createDemographicSubset Subset","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createDemographicSubset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create createDemographicSubset Subset — createDemographicSubset","text":"","code":"createDemographicSubset(   name = NULL,   ageMin = 0,   ageMax = 99999,   gender = NULL,   race = NULL,   ethnicity = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createDemographicSubset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create createDemographicSubset Subset — createDemographicSubset","text":"name Optional char name ageMin minimum age ageMax maximum age gender Gender demographics - concepts - 0, 8532, 8507, 0, \"female\", \"male\". string \"male\" \"female\" (case insensitive) converted gender concept 0. https://athena.ohdsi.org/search-terms/terms?standardConcept=Standard&domain=Gender&page=1&pageSize=15&query= Specific concept ids set can used explicitly validated race Race demographics - concept ID list ethnicity Ethnicity demographics - concept ID list","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyCohortDefinitionSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty cohort definition set — createEmptyCohortDefinitionSet","title":"Create an empty cohort definition set — createEmptyCohortDefinitionSet","text":"function creates empty cohort set data.frame use generateCohortSet.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyCohortDefinitionSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty cohort definition set — createEmptyCohortDefinitionSet","text":"","code":"createEmptyCohortDefinitionSet(verbose = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyCohortDefinitionSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty cohort definition set — createEmptyCohortDefinitionSet","text":"verbose TRUE, descriptions field data.frame returned","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyCohortDefinitionSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty cohort definition set — createEmptyCohortDefinitionSet","text":"Invisibly returns empty cohort set data.frame","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyNegativeControlOutcomeCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty negative control outcome cohort set — createEmptyNegativeControlOutcomeCohortSet","title":"Create an empty negative control outcome cohort set — createEmptyNegativeControlOutcomeCohortSet","text":"function creates empty cohort set data.frame use generateNegativeControlOutcomeCohorts.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyNegativeControlOutcomeCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty negative control outcome cohort set — createEmptyNegativeControlOutcomeCohortSet","text":"","code":"createEmptyNegativeControlOutcomeCohortSet(verbose = FALSE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyNegativeControlOutcomeCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty negative control outcome cohort set — createEmptyNegativeControlOutcomeCohortSet","text":"verbose TRUE, descriptions field data.frame returned","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createEmptyNegativeControlOutcomeCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty negative control outcome cohort set — createEmptyNegativeControlOutcomeCohortSet","text":"Invisibly returns empty negative control outcome cohort set data.frame","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createLimitSubset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Limit Subset — createLimitSubset","title":"Create Limit Subset — createLimitSubset","text":"Subset cohorts using specified limit criteria","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createLimitSubset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Limit Subset — createLimitSubset","text":"","code":"createLimitSubset(   name = NULL,   priorTime = 0,   followUpTime = 0,   minimumCohortDuration = 0,   limitTo = \"all\",   calendarStartDate = NULL,   calendarEndDate = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createLimitSubset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Limit Subset — createLimitSubset","text":"name Name operation priorTime Required prior observation window (specified positive integer) followUpTime Required post observation window (specified positive integer) minimumCohortDuration Required cohort duration length (specified positive integer) limitTo character one :                              \"firstEver\" - first entry patient history                              \"earliestRemaining\" - first entry washout set priorTime                              \"latestRemaining\" -  latest remaining washout set followUpTime                              \"lastEver\" - last entry patient history inside Note, using firstEver lastEver follow washout, patients events                          outside censored. \"firstEver\" \"lastEver\" applied first.                          \"earliestRemaining\" \"latestRemaining\" applied limit                          criteria applied (.e. applying prior/post time calendar time). calendarStartDate End date allow periods (e.g. 2020/1/1/) calendarEndDate Start date allow period (e.g. 2015/1/1)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createResultsDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the results data model tables on a database server. — createResultsDataModel","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"Create results data model tables database server.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createResultsDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"","code":"createResultsDataModel(   connectionDetails = NULL,   databaseSchema,   tablePrefix = \"\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createResultsDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"connectionDetails DatabaseConnector connectionDetails instance @seealso[DatabaseConnector::createConnectionDetails] databaseSchema schema server tables created. tablePrefix (Optional)  string insert table names database table names","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createResultsDataModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the results data model tables on a database server. — createResultsDataModel","text":"PostgreSQL SQLite servers supported.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createSubsetCohortWindow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a relative time window for cohort subset operations — createSubsetCohortWindow","title":"Create a relative time window for cohort subset operations — createSubsetCohortWindow","text":"function used create relative time window cohort subset operations. cohort window allows define interval time relative target cohort's start/end date subset cohort's start/end date.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createSubsetCohortWindow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a relative time window for cohort subset operations — createSubsetCohortWindow","text":"","code":"createSubsetCohortWindow(   startDay,   endDay,   targetAnchor,   subsetAnchor = NULL,   negate = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createSubsetCohortWindow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a relative time window for cohort subset operations — createSubsetCohortWindow","text":"startDay start day time window endDay end day time window targetAnchor anchor using target cohort's start date end date. parameter specified 'cohortStart' 'cohortEnd'. subsetAnchor anchor using subset cohort's start date end date. parameter specified 'cohortStart' 'cohortEnd'. negate Allows negating window, way detect subset occur relative target","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/createSubsetCohortWindow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a relative time window for cohort subset operations — createSubsetCohortWindow","text":"SubsetCohortWindow instance","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/dropCohortStatsTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop cohort statistics tables — dropCohortStatsTables","title":"Drop cohort statistics tables — dropCohortStatsTables","text":"function drops cohort statistics tables.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/dropCohortStatsTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop cohort statistics tables — dropCohortStatsTables","text":"","code":"dropCohortStatsTables(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema,   cohortTableNames = getCohortTableNames(),   dropCohortTable = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/dropCohortStatsTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop cohort statistics tables — dropCohortStatsTables","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTableNames names cohort tables. See getCohortTableNames details. dropCohortTable Optionally drop cohort table addition stats tables (defaults FALSE)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/exportCohortStatsTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the cohort statistics tables to the file system — exportCohortStatsTables","title":"Export the cohort statistics tables to the file system — exportCohortStatsTables","text":"function retrieves data cohort statistics tables writes inclusion statistics folder specified function call. NOTE: inclusion rule names handled one two ways: 1. can specify cohortDefinitionSet parameter inclusion rule names extracted data.frame. 2. can insert inclusion rule names database using insertInclusionRuleNames function package. first approach preferred avoid warning emitted.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/exportCohortStatsTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the cohort statistics tables to the file system — exportCohortStatsTables","text":"","code":"exportCohortStatsTables(   connectionDetails,   connection = NULL,   cohortDatabaseSchema,   cohortTableNames = getCohortTableNames(),   cohortStatisticsFolder,   snakeCaseToCamelCase = TRUE,   fileNamesInSnakeCase = FALSE,   incremental = FALSE,   databaseId = NULL,   minCellCount = 5,   cohortDefinitionSet = NULL,   tablePrefix = \"\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/exportCohortStatsTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the cohort statistics tables to the file system — exportCohortStatsTables","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTableNames names cohort tables. See getCohortTableNames details. cohortStatisticsFolder path folder cohort statistics folder results written snakeCaseToCamelCase column names exported files convert snake_case camelCase? Default FALSE fileNamesInSnakeCase exported files use snake_case? Default FALSE incremental incremental = TRUE, results written update values instead overwriting existing results databaseId Optional - specified, databaseId added exported results minCellCount preserve privacy: minimum number subjects contributing count can included results. count threshold, set `-minCellCount`. cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort tablePrefix Optional - allows append prefix exported file names.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of cohorts — generateCohortSet","title":"Generate a set of cohorts — generateCohortSet","text":"function generates set cohorts cohort table.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of cohorts — generateCohortSet","text":"","code":"generateCohortSet(   connectionDetails = NULL,   connection = NULL,   cdmDatabaseSchema,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   cohortDatabaseSchema = cdmDatabaseSchema,   cohortTableNames = getCohortTableNames(),   cohortDefinitionSet = NULL,   stopOnError = TRUE,   incremental = FALSE,   incrementalFolder = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of cohorts — generateCohortSet","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTableNames names cohort tables. See getCohortTableNames details. cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort stopOnError error happens generating one cohorts cohortDefinitionSet, stop processing cohorts? default TRUE; set FALSE, failures identified return value function. incremental Create cohorts created ? incrementalFolder incremental = TRUE, specify folder records kept definition executed.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of cohorts — generateCohortSet","text":"data.frame consisting following columns: cohortId unique integer identifier cohort cohortName cohort's name generationStatus status generation task may one following: COMPLETE generation completed successfully FAILED generation failed (see logs details) SKIPPED using incremental == 'TRUE', status indicates                               cohort's generation skipped since                               previously completed. startTime start time cohort generation. generationStatus == 'SKIPPED', startTime NA. endTime end time cohort generation. generationStatus == 'FAILED', endTime time failure.                   generationStatus == 'SKIPPED', endTime NA.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateNegativeControlOutcomeCohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of negative control outcome cohorts — generateNegativeControlOutcomeCohorts","title":"Generate a set of negative control outcome cohorts — generateNegativeControlOutcomeCohorts","text":"function generate set negative control outcome cohorts. information please see [Chapter 12 - Population Level Estimation](https://ohdsi.github.io/TheBookOfOhdsi/PopulationLevelEstimation.html) information cohorts utilized study design.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateNegativeControlOutcomeCohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of negative control outcome cohorts — generateNegativeControlOutcomeCohorts","text":"","code":"generateNegativeControlOutcomeCohorts(   connectionDetails = NULL,   connection = NULL,   cdmDatabaseSchema,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   cohortDatabaseSchema = cdmDatabaseSchema,   cohortTable = getCohortTableNames()$cohortTable,   negativeControlOutcomeCohortSet,   occurrenceType = \"all\",   incremental = FALSE,   incrementalFolder = NULL,   detectOnDescendants = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateNegativeControlOutcomeCohorts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of negative control outcome cohorts — generateNegativeControlOutcomeCohorts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTable Name cohort table. negativeControlOutcomeCohortSet negativeControlOutcomeCohortSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name outcomeConceptId concept_id condition domain use negative control outcome. occurrenceType occurrenceType detect either: first time outcomeConceptId occurs times outcomeConceptId occurs person. Values accepted: '' 'first'. incremental Create cohorts created ? incrementalFolder incremental = TRUE, specify folder records kept definition executed. detectOnDescendants set TRUE, detectOnDescendants use vocabulary find negative control outcomes using outcomeConceptId descendants via concept_ancestor table. FALSE, exact outcomeConceptId used detect outcome.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/generateNegativeControlOutcomeCohorts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of negative control outcome cohorts — generateNegativeControlOutcomeCohorts","text":"Invisibly returns empty negative control outcome cohort set data.frame","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the cohort(s) — getCohortCounts","title":"Count the cohort(s) — getCohortCounts","text":"Computes subject entry count per cohort. Note cohortDefinitionSet parameter optional - specify cohortDefinitionSet, cohort counts joined cohortDefinitionSet include attributes like cohortName.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the cohort(s) — getCohortCounts","text":"","code":"getCohortCounts(   connectionDetails = NULL,   connection = NULL,   cohortDatabaseSchema,   cohortTable = \"cohort\",   cohortIds = c(),   cohortDefinitionSet = NULL,   databaseId = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the cohort(s) — getCohortCounts","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort table resides. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTable name cohort table. cohortIds cohort Id(s) used reference cohort cohort table. left empty `cohortDefinitionSet` argument specified, cohorts table included. specify `cohortIds` `cohortDefinitionSet`, counts reflect `cohortIds` `cohortDefinitionSet`. cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort databaseId Optional - specified, databaseId added exported results","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the cohort(s) — getCohortCounts","text":"data frame cohort counts","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortDefinitionSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a cohort definition set — getCohortDefinitionSet","title":"Get a cohort definition set — getCohortDefinitionSet","text":"function supports legacy way retrieving cohort definition set file system package. function supports legacy way storing cohort definition set package CSV file, JSON files, SQL files `inst` folder.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortDefinitionSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a cohort definition set — getCohortDefinitionSet","text":"","code":"getCohortDefinitionSet(   settingsFileName = \"Cohorts.csv\",   jsonFolder = \"cohorts\",   sqlFolder = \"sql/sql_server\",   cohortFileNameFormat = \"%s\",   cohortFileNameValue = c(\"cohortId\"),   subsetJsonFolder = \"inst/cohort_subset_definitions/\",   packageName = NULL,   warnOnMissingJson = TRUE,   verbose = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortDefinitionSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a cohort definition set — getCohortDefinitionSet","text":"settingsFileName name CSV file hold cohort information including cohortId cohortName jsonFolder name folder hold JSON representation cohort available cohortDefinitionSet sqlFolder name folder hold SQL representation cohort. cohortFileNameFormat Defines format string  naming cohort JSON SQL files. format string follows standard defined base sprintf function. cohortFileNameValue Defines columns cohortDefinitionSet use conjunction cohortFileNameFormat parameter. subsetJsonFolder Defines folder store subset JSON packageName name package containing cohort definitions. warnOnMissingJson Provide warning .JSON file found cohort settings file verbose TRUE, extra logging messages emitted","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortDefinitionSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a cohort definition set — getCohortDefinitionSet","text":"Returns cohort set data.frame","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortInclusionRules.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cohort Inclusion Rules from a cohort definition set — getCohortInclusionRules","title":"Get Cohort Inclusion Rules from a cohort definition set — getCohortInclusionRules","text":"function returns data frame inclusion rules defined cohort definition set.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortInclusionRules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cohort Inclusion Rules from a cohort definition set — getCohortInclusionRules","text":"","code":"getCohortInclusionRules(cohortDefinitionSet)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortInclusionRules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cohort Inclusion Rules from a cohort definition set — getCohortInclusionRules","text":"cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cohort Inclusion Stats Table Data — getCohortStats","title":"Get Cohort Inclusion Stats Table Data — getCohortStats","text":"function returns data frame data Cohort Inclusion Tables. Results organized list 5 different data frames: cohortInclusionTable cohortInclusionResultTable cohortInclusionStatsTable cohortSummaryStatsTable cohortCensorStatsTable can optionally specified outputTables. See exportCohortStatsTables function saving data csv.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cohort Inclusion Stats Table Data — getCohortStats","text":"","code":"getCohortStats(   connectionDetails,   connection = NULL,   cohortDatabaseSchema,   databaseId = NULL,   snakeCaseToCamelCase = TRUE,   outputTables = c(\"cohortInclusionTable\", \"cohortInclusionResultTable\",     \"cohortInclusionStatsTable\", \"cohortInclusionStatsTable\", \"cohortSummaryStatsTable\",     \"cohortCensorStatsTable\"),   cohortTableNames = getCohortTableNames() )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cohort Inclusion Stats Table Data — getCohortStats","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. databaseId Optional - specified, databaseId added exported results snakeCaseToCamelCase Convert column names snake case camel case. outputTables Character vector. One \"cohortInclusionTable\", \"cohortInclusionResultTable\", \"cohortInclusionStatsTable\", \"cohortInclusionStatsTable\", \"cohortSummaryStatsTable\" \"cohortCensorStatsTable\". Output limited tables. export, , example, cohort table. Defaults stats tables. cohortTableNames names cohort tables. See getCohortTableNames details.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortTableNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Used to get a list of cohort table names to use when creating the cohort tables — getCohortTableNames","title":"Used to get a list of cohort table names to use when creating the cohort tables — getCohortTableNames","text":"function creates list table names used createCohortTables specify table names create. Use function specify names main cohort table cohort statistics tables.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortTableNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used to get a list of cohort table names to use when creating the cohort tables — getCohortTableNames","text":"","code":"getCohortTableNames(   cohortTable = \"cohort\",   cohortSampleTable = cohortTable,   cohortInclusionTable = paste0(cohortTable, \"_inclusion\"),   cohortInclusionResultTable = paste0(cohortTable, \"_inclusion_result\"),   cohortInclusionStatsTable = paste0(cohortTable, \"_inclusion_stats\"),   cohortSummaryStatsTable = paste0(cohortTable, \"_summary_stats\"),   cohortCensorStatsTable = paste0(cohortTable, \"_censor_stats\") )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortTableNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used to get a list of cohort table names to use when creating the cohort tables — getCohortTableNames","text":"cohortTable Name cohort table. cohortSampleTable Name cohort table sampled cohorts (defaults cohort table). cohortInclusionTable Name inclusion table, one tables storing inclusion rule statistics. cohortInclusionResultTable Name inclusion result table, one tables storing inclusion rule statistics. cohortInclusionStatsTable Name inclusion stats table, one tables storing inclusion rule statistics. cohortSummaryStatsTable Name summary stats table, one tables storing inclusion rule statistics. cohortCensorStatsTable Name censor stats table, one tables storing inclusion rule statistics.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getCohortTableNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used to get a list of cohort table names to use when creating the cohort tables — getCohortTableNames","text":"list table names specified parameters function.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getDataMigrator.html","id":null,"dir":"Reference","previous_headings":"","what":"Get database migrations instance — getDataMigrator","title":"Get database migrations instance — getDataMigrator","text":"Returns ResultModelManager DataMigrationsManager instance.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getDataMigrator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get database migrations instance — getDataMigrator","text":"","code":"getDataMigrator(connectionDetails, databaseSchema, tablePrefix = \"\")"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getDataMigrator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get database migrations instance — getDataMigrator","text":"connectionDetails DatabaseConnector connection details object databaseSchema String schema database schema lives tablePrefix (Optional) Use table prefix used table names (e.g. \"cg_\")","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getDataMigrator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get database migrations instance — getDataMigrator","text":"Instance ResultModelManager::DataMigrationManager interface converting existing data models","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getRequiredTasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of tasks required when running in incremental mode — getRequiredTasks","title":"Get a list of tasks required when running in incremental mode — getRequiredTasks","text":"function attempt check recordKeepingFile determine list operations completed comparing keys passed function checksum supplied","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getRequiredTasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of tasks required when running in incremental mode — getRequiredTasks","text":"","code":"getRequiredTasks(..., checksum, recordKeepingFile)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getRequiredTasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of tasks required when running in incremental mode — getRequiredTasks","text":"... Parameter values used identify key incremental record keeping file checksum checksum representing operation check recordKeepingFile file path CSV file containing record keeping information.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getRequiredTasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of tasks required when running in incremental mode — getRequiredTasks","text":"Returns list outstanding tasks based inspecting full contents record keeping file","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getResultsDataModelSpecifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specifications for CohortGenerator results data model — getResultsDataModelSpecifications","title":"Get specifications for CohortGenerator results data model — getResultsDataModelSpecifications","text":"Get specifications CohortGenerator results data model","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getResultsDataModelSpecifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specifications for CohortGenerator results data model — getResultsDataModelSpecifications","text":"","code":"getResultsDataModelSpecifications()"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getResultsDataModelSpecifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get specifications for CohortGenerator results data model — getResultsDataModelSpecifications","text":"tibble data frame object specifications","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getSubsetDefinitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cohort subset definitions from a cohort definition set — getSubsetDefinitions","title":"Get cohort subset definitions from a cohort definition set — getSubsetDefinitions","text":"Get subset definitions () applied cohort definition set. Note subset definitions copy applied cohort set. Modifying definitions modify base cohort set. apply modification, reapply subset definition cohort definition set data.frame addCohortSubsetDefinition `overwriteExisting = TRUE`.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getSubsetDefinitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cohort subset definitions from a cohort definition set — getSubsetDefinitions","text":"","code":"getSubsetDefinitions(cohortDefinitionSet)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getSubsetDefinitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cohort subset definitions from a cohort definition set — getSubsetDefinitions","text":"cohortDefinitionSet valid cohortDefinitionSet","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/getSubsetDefinitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cohort subset definitions from a cohort definition set — getSubsetDefinitions","text":"list cohort subset definitions empty list","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/insertInclusionRuleNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Used to insert the inclusion rule names from a cohort definition set when generating cohorts that include cohort statistics — insertInclusionRuleNames","title":"Used to insert the inclusion rule names from a cohort definition set when generating cohorts that include cohort statistics — insertInclusionRuleNames","text":"function take cohortDefinitionSet inclusions Circe JSON representation cohort, parse InclusionRule property obtain inclusion rule name sequence number insert values cohortInclusionTable. function required generating cohorts include cohort statistics.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/insertInclusionRuleNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used to insert the inclusion rule names from a cohort definition set when generating cohorts that include cohort statistics — insertInclusionRuleNames","text":"","code":"insertInclusionRuleNames(   connectionDetails = NULL,   connection = NULL,   cohortDefinitionSet,   cohortDatabaseSchema,   cohortInclusionTable = getCohortTableNames()$cohortInclusionTable )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/insertInclusionRuleNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used to insert the inclusion rule names from a cohort definition set when generating cohorts that include cohort statistics — insertInclusionRuleNames","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortInclusionTable Name inclusion table, one tables storing inclusion rule statistics.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/insertInclusionRuleNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used to insert the inclusion rule names from a cohort definition set when generating cohorts that include cohort statistics — insertInclusionRuleNames","text":"data frame containing inclusion rules cohort sequence ID","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCamelCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Used to check if a string is in lower camel case — isCamelCase","title":"Used to check if a string is in lower camel case — isCamelCase","text":"function used check string conforms lower camel case format.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCamelCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used to check if a string is in lower camel case — isCamelCase","text":"","code":"isCamelCase(x)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCamelCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used to check if a string is in lower camel case — isCamelCase","text":"x string evaluate","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCamelCase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used to check if a string is in lower camel case — isCamelCase","text":"TRUE string lower camel case","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCohortDefinitionSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the data.frame a cohort definition set? — isCohortDefinitionSet","title":"Is the data.frame a cohort definition set? — isCohortDefinitionSet","text":"function checks data.frame verify holds expected format cohortDefinitionSet.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCohortDefinitionSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the data.frame a cohort definition set? — isCohortDefinitionSet","text":"","code":"isCohortDefinitionSet(x)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCohortDefinitionSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the data.frame a cohort definition set? — isCohortDefinitionSet","text":"x data.frame check","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isCohortDefinitionSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the data.frame a cohort definition set? — isCohortDefinitionSet","text":"Returns TRUE input cohortDefinitionSet returns FALSE warnings violations","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isFormattedForDatabaseUpload.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the data.frame formatted for uploading to a database? — isFormattedForDatabaseUpload","title":"Is the data.frame formatted for uploading to a database? — isFormattedForDatabaseUpload","text":"function used check data.frame ensure column names snake case format.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isFormattedForDatabaseUpload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the data.frame formatted for uploading to a database? — isFormattedForDatabaseUpload","text":"","code":"isFormattedForDatabaseUpload(x, warn = TRUE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isFormattedForDatabaseUpload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the data.frame formatted for uploading to a database? — isFormattedForDatabaseUpload","text":"x data frame warn TRUE, display warning columns snake case format","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isFormattedForDatabaseUpload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the data.frame formatted for uploading to a database? — isFormattedForDatabaseUpload","text":"Returns TRUE columns snake case format. warn == TRUE, function emit warning column names snake case format.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isSnakeCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Used to check if a string is in snake case — isSnakeCase","title":"Used to check if a string is in snake case — isSnakeCase","text":"function used check string conforms snake case format.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isSnakeCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used to check if a string is in snake case — isSnakeCase","text":"","code":"isSnakeCase(x)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isSnakeCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used to check if a string is in snake case — isSnakeCase","text":"x string evaluate","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isSnakeCase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used to check if a string is in snake case — isSnakeCase","text":"TRUE string snake case","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isTaskRequired.html","id":null,"dir":"Reference","previous_headings":"","what":"Is a task required when running in incremental mode — isTaskRequired","title":"Is a task required when running in incremental mode — isTaskRequired","text":"function attempt check recordKeepingFile determine individual operation completed comparing keys passed function checksum supplied","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isTaskRequired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is a task required when running in incremental mode — isTaskRequired","text":"","code":"isTaskRequired(..., checksum, recordKeepingFile, verbose = TRUE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isTaskRequired.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is a task required when running in incremental mode — isTaskRequired","text":"... Parameter values used identify key incremental record keeping file checksum checksum representing operation check recordKeepingFile file path CSV file containing record keeping information. verbose TRUE, function output particular operation completed based inspecting recordKeepingFile.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/isTaskRequired.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is a task required when running in incremental mode — isTaskRequired","text":"Returns TRUE operation completed according contents record keeping file.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/migrateDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Migrate Data model — migrateDataModel","title":"Migrate Data model — migrateDataModel","text":"Migrate data current state next state strongly advised backup data (either sqlite files, backup database (case using postgres backend) kept csv/zip files data generation.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/migrateDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migrate Data model — migrateDataModel","text":"","code":"migrateDataModel(connectionDetails, databaseSchema, tablePrefix = \"\")"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/migrateDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migrate Data model — migrateDataModel","text":"connectionDetails DatabaseConnector connection details object databaseSchema String schema database schema lives tablePrefix (Optional) Use table prefix used table names (e.g. \"cg_\")","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmDrugExposure.html","id":null,"dir":"Reference","previous_headings":"","what":"OMOP CDM Drug Exposure Sample Data — omopCdmDrugExposure","title":"OMOP CDM Drug Exposure Sample Data — omopCdmDrugExposure","text":"data set containing sample drug exposures 2 drugs","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmDrugExposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OMOP CDM Drug Exposure Sample Data — omopCdmDrugExposure","text":"","code":"omopCdmDrugExposure"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmDrugExposure.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OMOP CDM Drug Exposure Sample Data — omopCdmDrugExposure","text":"data frame 8 rows 5 variables: drug_exposure_id unique identifier drug exposure person_id integer representing patient drug_concept_id integer concept ID representing drug concept drug_exposure_start_date Drug start date drug_exposure_end_date Drug end date","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmDrugExposure.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OMOP CDM Drug Exposure Sample Data — omopCdmDrugExposure","text":"Fictional data demonstration.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmPerson.html","id":null,"dir":"Reference","previous_headings":"","what":"OMOP CDM Person Sample Data — omopCdmPerson","title":"OMOP CDM Person Sample Data — omopCdmPerson","text":"data set containing sample persons","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmPerson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OMOP CDM Person Sample Data — omopCdmPerson","text":"","code":"omopCdmPerson"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmPerson.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OMOP CDM Person Sample Data — omopCdmPerson","text":"data frame 12 rows 5 variables: person_id unique identifier person gender_concept_id integer concept ID representing person's gender year_of_birth Year birth race_concept_id integer concept ID representing person's race ethnicity_concept_id integer concept ID representing person's ethnicity","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/omopCdmPerson.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OMOP CDM Person Sample Data — omopCdmPerson","text":"Fictional data demonstration.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/readCsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Used to read a .csv file — readCsv","title":"Used to read a .csv file — readCsv","text":"function used centralize function reading .csv files across HADES ecosystem. function automatically convert snake_case file camelCase data.frame returned standard described : https://ohdsi.github.io/Hades/codeStyle.html#Interfacing_between_R_and_SQL","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/readCsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used to read a .csv file — readCsv","text":"","code":"readCsv(file, warnOnCaseMismatch = TRUE, colTypes = readr::cols())"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/readCsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used to read a .csv file — readCsv","text":"file .csv file read. warnOnCaseMismatch TRUE, raise warning column headings .csv snake_case format colTypes Corresponds `col_types` `readr::read_csv` function.   One `NULL`, [readr::cols()] specification,   string. See `vignette(\"readr\")` details. `NULL`, column types inferred `guess_max` rows    input, interspersed throughout file. convenient (fast),    robust. guessed types wrong, need increase    `guess_max` supply correct types . Column specifications created [list()] [cols()] must contain    one column specification column. Alternatively, can use compact string representation    character represents one column:    - c = character    - = integer    - n = number    - d = double    - l = logical    - f = factor    - D = date    - T = date time    - t = time    - ? = guess    - _ - = skip default, reading file without column specification print    message showing `readr` guessed . remove message,    set `show_col_types = FALSE` set `options(readr.show_col_types = FALSE)`.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/readCsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used to read a .csv file — readCsv","text":"tibble .csv contents","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/recordTasksDone.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a task as complete — recordTasksDone","title":"Record a task as complete — recordTasksDone","text":"function record task completed recordKeepingFile","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/recordTasksDone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a task as complete — recordTasksDone","text":"","code":"recordTasksDone(..., checksum, recordKeepingFile, incremental = TRUE)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/recordTasksDone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a task as complete — recordTasksDone","text":"... Parameter values used identify key incremental record keeping file checksum checksum representing operation check recordKeepingFile file path CSV file containing record keeping information. incremental TRUE, function record tasks otherwise return without attempting perform action","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/runCohortGeneration.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a cohort generation and export results — runCohortGeneration","title":"Run a cohort generation and export results — runCohortGeneration","text":"Run cohort generation export results","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/runCohortGeneration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a cohort generation and export results — runCohortGeneration","text":"","code":"runCohortGeneration(   connectionDetails,   cdmDatabaseSchema,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   cohortDatabaseSchema = cdmDatabaseSchema,   cohortTableNames = getCohortTableNames(),   cohortDefinitionSet = NULL,   negativeControlOutcomeCohortSet = NULL,   occurrenceType = \"all\",   detectOnDescendants = FALSE,   stopOnError = TRUE,   outputFolder,   databaseId = 1,   minCellCount = 5,   incremental = FALSE,   incrementalFolder = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/runCohortGeneration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a cohort generation and export results — runCohortGeneration","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. cdmDatabaseSchema Schema name patient-level data OMOP CDM format resides. Note SQL Server, include database schema name, example 'cdm_data.dbo'. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. cohortTableNames names cohort tables. See getCohortTableNames details. cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort negativeControlOutcomeCohortSet negativeControlOutcomeCohortSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name outcomeConceptId concept_id condition domain use negative control outcome. occurrenceType negative controls outcomes, occurrenceType detect either: first time outcomeConceptId occurs times outcomeConceptId occurs person. Values accepted: '' 'first'. detectOnDescendants negative controls outcomes, set TRUE, detectOnDescendants use vocabulary find negative control outcomes using outcomeConceptId descendants via concept_ancestor table. FALSE, exact outcomeConceptId used detect outcome. stopOnError error happens generating one cohorts cohortDefinitionSet, stop processing cohorts? default TRUE; set FALSE, failures identified return value function. outputFolder Name folder outputs written . databaseId unique ID database. appended tables. minCellCount preserve privacy: minimum number subjects contributing count can included results. count threshold, set `-minCellCount`. incremental Create cohorts created ? incrementalFolder incremental = TRUE, specify folder records kept definition executed.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/runCohortGeneration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a cohort generation and export results — runCohortGeneration","text":"Run cohort generation set cohorts negative control outcomes. function also export results run `outputFolder`.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/sampleCohortDefinitionSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Cohort Definition Set — sampleCohortDefinitionSet","title":"Sample Cohort Definition Set — sampleCohortDefinitionSet","text":"Create 1 sample size n cohort definition set Subsetted cohorts can sampled, subset form. However, subsetting sampled cohort recommended currently supported time. case n > cohort count entire cohort copied unmodified different databases different forms randomness, random selection computed R, based count cohort. , therefore, db platform independent Note, function assumes cohorts already generated. Lifecycle Note: functionality considered experimental intended use inside analytic packages","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/sampleCohortDefinitionSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Cohort Definition Set — sampleCohortDefinitionSet","text":"","code":"sampleCohortDefinitionSet(   cohortDefinitionSet,   cohortIds = cohortDefinitionSet$cohortId,   connectionDetails = NULL,   connection = NULL,   tempEmulationSchema = getOption(\"sqlRenderTempEmulationSchema\"),   cohortDatabaseSchema,   outputDatabaseSchema = cohortDatabaseSchema,   cohortTableNames = getCohortTableNames(),   n = NULL,   sampleFraction = NULL,   seed = 64374,   seedArgs = NULL,   identifierExpression = \"cohortId * 1000 + seed\",   incremental = FALSE,   incrementalFolder = NULL )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/sampleCohortDefinitionSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Cohort Definition Set — sampleCohortDefinitionSet","text":"cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort cohortIds Optional subset cohortIds generate. default function sample cohorts connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. Can left NULL connection provided. connection object type connection created using connect function DatabaseConnector package. Can left NULL connectionDetails provided, case new connection opened start function, closed function finishes. tempEmulationSchema database platforms like Oracle Impala truly support temp tables. emulate temp tables, provide schema write privileges temp tables can created. cohortDatabaseSchema Schema name cohort tables reside. Note SQL Server, include database schema name, example 'scratch.dbo'. outputDatabaseSchema optional schema output cohorts (different cohortDatabaseSchema) cohortTableNames names cohort tables. See getCohortTableNames details. n Sample size. Ignored sample fraction set sampleFraction Fraction cohort sample seed Vector seeds give R pseudorandom number generator seedArgs optional arguments pass set.seed identifierExpression Optional string R expression used compute output cohort id. Can use variables cohortId seed. Default \"cohortId * 1000 + seed\", substituted evaluated incremental Create cohorts created ? incrementalFolder incremental = TRUE, specify folder records kept definition executed.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/sampleCohortDefinitionSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Cohort Definition Set — sampleCohortDefinitionSet","text":"sampledCohortDefinitionSet - data.frame like object contains resulting identifiers modified names cohorts","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveCohortDefinitionSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the cohort definition set to the file system — saveCohortDefinitionSet","title":"Save the cohort definition set to the file system — saveCohortDefinitionSet","text":"function saves cohortDefinitionSet file system provides options specifying write individual elements: settings file contain cohort information CSV specified settingsFileName, cohort JSON written jsonFolder SQL written sqlFolder. also provide way specify json/sql file name format using cohortFileNameFormat cohortFileNameValue parameters.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveCohortDefinitionSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the cohort definition set to the file system — saveCohortDefinitionSet","text":"","code":"saveCohortDefinitionSet(   cohortDefinitionSet,   settingsFileName = \"inst/Cohorts.csv\",   jsonFolder = \"inst/cohorts\",   sqlFolder = \"inst/sql/sql_server\",   cohortFileNameFormat = \"%s\",   cohortFileNameValue = c(\"cohortId\"),   subsetJsonFolder = \"inst/cohort_subset_definitions/\",   verbose = FALSE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveCohortDefinitionSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the cohort definition set to the file system — saveCohortDefinitionSet","text":"cohortDefinitionSet cohortDefinitionSet argument must data frame following columns: cohortId unique integer identifier cohort cohortName cohort's name sql OHDSI-SQL used generate cohort Optionally, data frame may contain: json Circe JSON representation cohort settingsFileName name CSV file hold cohort information including cohortId cohortName jsonFolder name folder hold JSON representation cohort available cohortDefinitionSet sqlFolder name folder hold SQL representation cohort. cohortFileNameFormat Defines format string  naming cohort JSON SQL files. format string follows standard defined base sprintf function. cohortFileNameValue Defines columns cohortDefinitionSet use conjunction cohortFileNameFormat parameter. subsetJsonFolder Defines folder store subset JSON verbose TRUE, logging messages emitted indicate export progress.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveCohortSubsetDefinition.html","id":null,"dir":"Reference","previous_headings":"","what":"Save cohort subset definitions to json — saveCohortSubsetDefinition","title":"Save cohort subset definitions to json — saveCohortSubsetDefinition","text":"generally used part saveCohortDefinitionSet","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveCohortSubsetDefinition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save cohort subset definitions to json — saveCohortSubsetDefinition","text":"","code":"saveCohortSubsetDefinition(   subsetDefinition,   subsetJsonFolder = \"inst/cohort_subset_definitions/\" )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveCohortSubsetDefinition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save cohort subset definitions to json — saveCohortSubsetDefinition","text":"subsetDefinition subset definition object @seealso[CohortSubsetDefinition] subsetJsonFolder Defines folder store subset JSON","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveIncremental.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in incremental mode to save values to a file — saveIncremental","title":"Used in incremental mode to save values to a file — saveIncremental","text":"running incremental mode, may need update results CSV file. function replace data fileName based key parameters","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveIncremental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in incremental mode to save values to a file — saveIncremental","text":"","code":"saveIncremental(data, fileName, ...)"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/saveIncremental.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in incremental mode to save values to a file — saveIncremental","text":"data data record file fileName CSV holding results structure data parameter ... Parameter values used identify key results file","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/uploadResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload results to the database server. — uploadResults","title":"Upload results to the database server. — uploadResults","text":"Requires results data model tables created using createResultsDataModel function.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/uploadResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload results to the database server. — uploadResults","text":"","code":"uploadResults(   connectionDetails,   schema,   resultsFolder,   forceOverWriteOfSpecifications = FALSE,   purgeSiteDataBeforeUploading = TRUE,   tablePrefix = \"\",   ... )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/uploadResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload results to the database server. — uploadResults","text":"connectionDetails object type connectionDetails created using createConnectionDetails function DatabaseConnector package. schema schema server tables created. resultsFolder folder holding results .csv files forceOverWriteOfSpecifications TRUE, specifications phenotypes, cohort definitions, analysis overwritten already exist database. use specifications changed since last upload. purgeSiteDataBeforeUploading TRUE, inserting data specific databaseId data site dropped. assumes resultsFolder file contains full data data site. tablePrefix (Optional)  string insert table names database table names ... See ResultModelManager::uploadResults","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/writeCsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Used to write a .csv file — writeCsv","title":"Used to write a .csv file — writeCsv","text":"function used centralize function writing .csv files across HADES ecosystem. function automatically convert camelCase data.frame snake_case column names resulting .csv file standard described : https://ohdsi.github.io/Hades/codeStyle.html#Interfacing_between_R_and_SQL function may also raise warnings data stored format work HADES standard uploading results database. Specifically file names snake_case format, column headings snake_case format possible file name plural. See isFormattedForDatabaseUpload helper function check data.frame rules column names","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/writeCsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used to write a .csv file — writeCsv","text":"","code":"writeCsv(   x,   file,   append = FALSE,   warnOnCaseMismatch = TRUE,   warnOnFileNameCaseMismatch = TRUE,   warnOnUploadRuleViolations = TRUE )"},{"path":"https://ohdsi.github.io/CohortGenerator/reference/writeCsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used to write a .csv file — writeCsv","text":"x data frame tibble write disk. file .csv file write. append TRUE, append values x existing file. warnOnCaseMismatch TRUE, raise warning columns data.frame camelCase format. warnOnFileNameCaseMismatch TRUE, raise warning file name specified snake_case format. warnOnUploadRuleViolations TRUE, function provide warning messages may indicate data stored format .csv may cause problems uploading database.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/reference/writeCsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used to write a .csv file — writeCsv","text":"Returns input x invisibly.","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-0120","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.12.0","title":"CohortGenerator 0.12.0","text":"New Features Backwards compatable extension CohortSubsetOperators cohortSubsetWindows allow windowing logic length Include observation table creating negative control cohorts (#198) Improvements cohort subset documentation (#199) Add negate parameter createSubsetCohortWindow function (#217) Bug Fixes - Remove RJSONIO dependency list (#202) - Upgrade GitHub Actions use Ubuntu 22.04 (#204) - Add missing database_id primary key cg_cohort_censor_stats (#215) - saveIncremental prevents saving empty files (#212) - Subset identifier expressions deserialized (#225)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-0112","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.11.2","title":"CohortGenerator 0.11.2","text":"CRAN release: 2024-09-30 Ensure temp tables dropped creating (#188)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-0111","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.11.1","title":"CohortGenerator 0.11.1","text":"CRAN release: 2024-09-15 CohortGenerator added CRAN (#77)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-0110","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.11.0","title":"CohortGenerator 0.11.0","text":"New Features Add support minimum cell count (#176) Bug Fixes Multiple calls export stats causing duplicates cohort inclusion file (#179) Updates subset documentation (#180, #181) Negative control outcome generation bug (#177)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-0100","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.10.0","title":"CohortGenerator 0.10.0","text":"New Features Add runCohortGeneration function (Issue #165) Adopt ResultModelManager handling results data models & uploading. Extend results data model include information cohort subsets(#154, #162) Remove REMOTES entries CirceR Eunomia now CRAN (#145) Unit tests now running OHDSI DB Platforms (#151) Bug Fixes Negation cohort subset operator must join subject_id start_date (#167) Allow integer cohort ID (#146) Use native messaging functions output vs. ParallelLogger (#97) Prevent upload inclusion rule information (#78) Expose colTypes working .csv files (#59) Remove bit64 package (mostly) (#152) Updated documentation cohort subset negate feature (#111)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-090","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.9.0","title":"CohortGenerator 0.9.0","text":"Random sample functionality (development ) (Issue #129) Incremental mode negative control cohort generation (Issue #137) Fixes getCohortCounts() cohortIds specified, cohortDefinitionSet . (Issue #136) Add cohort ID generation output messages (Issue #132) Add databaseId output getStatsTable() (Issue #116) Prevent duplicate cohort IDs cohortDefinitionSet (Issue #130) Fix cohort stats query Oracle (Issue #143) Ensure databaseId applied returned cohort counts (Issue #144) Preserve backwards compatibility cohort sample table list cohort table names (Issue #147)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-081","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.8.1","title":"CohortGenerator 0.8.1","text":"Include cohorts 0 people cohort counts (Issue #91). Use numeric cohort ID (Issue #98) Allow big ints target pairs (#103) Pass tempEmulationSchema creating negative control cohorts (#104) Target CDM v5.4 unit tests (#119) Fix subset references (#115) Allow subset cohort name templating (#118) Allow entries limit operator require > 0 days follow (#112)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-080","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.8.0","title":"CohortGenerator 0.8.0","text":"New feature: cohort subsetting (Issue #67). Removes evaluation ROhdsiWebApi code vignettes (Issue #70) Basic tests different database platforms (#71)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-070","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.7.0","title":"CohortGenerator 0.7.0","text":"Fixes data type issue Google Big Query (Issue #51). Removes databaseId field cohort inclusion table (Issue #52) Adds ability generate negative control outcome cohorts use population-level estimation. (Issue #9)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-060","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.6.0","title":"CohortGenerator 0.6.0","text":"Add flexibility reading/writing CSV files including appending (Issue #44), flags disabling warnings (Issue #38) removing unhelpful warnings (Issue #43). Added better error handling saveCohortDefinitionSet (Issue #25) Add better handling column name casing CSV files hold cohort settings. (Issue #37) Added functions check data.frame conforms cohortDefinitionSet (Issue #21)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-050","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.5.0","title":"CohortGenerator 0.5.0","text":"Allow specification database_id export methods. (Issue #18) getCohortStats function allows exporting cohort statistics data frames (Pull Request #24) Add utility methods reading/writing CSV files. (Issue #16)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-040","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.4.0","title":"CohortGenerator 0.4.0","text":"Update dependency versions DESCRIPTION resolve issues using older versions readr/stringi. (Issue #13) Breaking change: change defaults saving/getting cohortDefinitionSet /file system. (Issue #16) getCohortCounts now supports optional parameter cohortDefinitionSet join cohort counts cohort definition set desired (Issue #14)","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-030","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.3.0","title":"CohortGenerator 0.3.0","text":"Added getCohortDefintionSet function retrieving cohort definition set either package file system Re-factored saveCohortDefinitionSet remove settingsFolder. settingsFileName include path file. Bug fixes","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-020","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.2.0","title":"CohortGenerator 0.2.0","text":"Renamed createCohortTable createCohortTables include cohort statistics tables Renamed createEmptyCohortSet createEmptyCohortDefinitionSet make consistent ROhdsiWebApi CohortDiagnostics Added dropCohortStatsTables function removing cohort statistics tables Added exportCohortStatsTables function exporting cohort statistics CSV files Added getCohortTableNames function define list cohort table names create Added insertInclusionRuleNames inserting inclusion rule names cohort stats table Added saveCohortDefinitionSet save cohort definition set file system use study packages Added vignette updated documentation Remove CirceR dependency related functions","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-011","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.1.1","title":"CohortGenerator 0.1.1","text":"Fixing documentation","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-010","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.1.0","title":"CohortGenerator 0.1.0","text":"Updating function calls use “generate” instead “instantiate”","code":""},{"path":"https://ohdsi.github.io/CohortGenerator/news/index.html","id":"cohortgenerator-001","dir":"Changelog","previous_headings":"","what":"CohortGenerator 0.0.1","title":"CohortGenerator 0.0.1","text":"Initial version","code":""}]
